<h3>
    Overview
</h3>

<p>
    The @property tag is a way to easily document a list of static properties of a class, namespace or other object.
</p>

<p>
    Normally JSDoc templates would create an entire new page to display information about each level of a nested namespace hierarchy. Sometimes what you really want is to just list all the properties, including nested properties, all together on the same page.
</p>

<p>
    Note that property tags must be used in doc comments for the thing that they are properties of, a namespace or a class for example. This tag is intended for simple collections of static properties, it does not allow you to provide @examples or similar complex information for each property, just the type, name and description.
</p>

<h3>
    Examples
</h3>

<p>
    In this example we have a namespace named "config." We want all the information about the defaults property, including it's nested values to appear on the same page with the documentation for config.
</p>

<p>
    <b>A namespace with defaults and nested default properties</b>
</p>

{{#includeExample}}
    jake/extended_docs/examples/tags-property-0.js
{{/includeExample}}
{{#includeExample}}
    ../jsdoc/test/fixtures/propertytag.js
{{/includeExample}}

<h3>
    See Also
</h3>

<ul>
    <li>Contrast this tag with the <a href="tags-member.html">@member</a> tag.
    </li>

    <li>
        <a href="tags-enum.html">@enum</a>
    </li>
</ul>
