/*jslint indent: 4, maxerr: 50, white: true, node: true, stupid: true, sloppy: true */

/**
 * @file This file contains code to build html files from articles formatted with our custom mustache tags.
 * @author <a href="matthewkastor@gmail.com">Matthew Kastor</a>
 * @version 20121030
 * @requires ArticleParser
 * @requires mustacheFunctions
 * @requires fs
 * @requires events
 * @requires util
 * @requires path
 */

var fs,
    events,
    util,
    path,
    ArticleParser,
    articleParser,
    mustacheFunctions,
    generator,
    srcdir,
    outdir,
    articles;

srcdir = 'Jake/articles/';
outdir = './';
    
fs    = require('fs');
events= require('events');
util  = require('util');
path  = require('path');

ArticleParser = require('ArticleParser').ArticleParser;
articleParser = new ArticleParser();
mustacheFunctions = require('mustacheFunctions');

articles = [];


function purgeHtmlPages(outdir) {
    var remove, files;
    path.resolve(outdir);
    try {
        fs.readdirSync(outdir).forEach(function (file) {
            if (/\.html$/.test(file)) {
                remove = path.join(outdir, file);
                fs.unlinkSync(remove);
                console.log('file removed', remove);
            }
        });
    } catch(err) {
        console.log('There was an error when purging the HTML files.');
    }
}
// purges html pages from several directories.
[ 'Jake/API/describeTags',
  'Jake/API/jsdoc/jsdoc.js',
  'Jake/API/jsdoc/node_modules',
  'Jake/API/jsdoc/plugins',
  'Jake/API/jsdoc/rhino_modules',
  'Jake/API/jsdoc/templates' ].forEach(function(where) {
    purgeHtmlPages(where);
});

var generator;

generator = new (require('jsdoc3_api_generator').Jsdoc3_api_generator)();


console.log('Building index...');
articleParser.loadArticleFiles(srcdir);
articles = articleParser.getArticles();

console.log('Cleaning pages...');
purgeHtmlPages(outdir);


function whatever() {
    console.log('Building new pages...');
    var mustachio = new mustacheFunctions.MustacheComb();
    mustachio.generateArticles(articles, outdir);
}

generator.generateDocs(whatever);